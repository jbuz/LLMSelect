name: Security Scan

on:
  push:
    branches: [ main, 'copilot/**' ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 2 AM UTC to catch new vulnerabilities
    - cron: '0 2 * * *'

permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0  # Full history for comprehensive scanning

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@1f2d10fb689bc07a5f56f0b2bb70c617c52cb2c3 # v2.3.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }} # Optional for Gitleaks Pro
          
  trufflehog-scan:
    name: TruffleHog Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@c107b06bafaf8d8b7bc72e4ac8a4c8b9f6d77c49 # v3.63.2
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  code-scanning:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python', 'javascript' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Initialize CodeQL
        uses: github/codeql-action/init@cdcdbb579706841c47f7063dda365e292e5cad7a # v2.13.4
        with:
          languages: ${{ matrix.language }}
          queries: security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@cdcdbb579706841c47f7063dda365e292e5cad7a # v2.13.4

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@cdcdbb579706841c47f7063dda365e292e5cad7a # v2.13.4
        with:
          category: "/language:${{matrix.language}}"

  dependency-audit:
    name: Dependency Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Set up Python
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety

      - name: Python dependency audit (Safety)
        run: |
          # Check for known vulnerabilities
          safety check --json || echo "::warning::Python dependencies have known vulnerabilities"

      - name: Set up Node.js
        uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0
        with:
          node-version: '16'

      - name: Install Node dependencies
        run: npm ci

      - name: Node dependency audit
        run: |
          npm audit --audit-level=moderate || echo "::warning::Node dependencies have known vulnerabilities"

  sbom-generation:
    name: Generate SBOM
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Generate SBOM with Syft
        uses: anchore/sbom-action@78fc58e266e87a38d4194b2137a3d4e9bcaf7ca1 # v0.14.3
        with:
          format: spdx-json
          output-file: sbom.spdx.json
          upload-artifact: true
          upload-release-assets: false

      - name: Upload SBOM as artifact
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: sbom-spdx-json
          path: sbom.spdx.json
          retention-days: 90

  vulnerability-scan:
    name: Container Vulnerability Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Build Docker image
        run: docker build -t llmselect:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@fbd16365eb88e12433951383f5e99bd901fc618f # 0.12.0
        with:
          image-ref: llmselect:${{ github.sha }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@cdcdbb579706841c47f7063dda365e292e5cad7a # v2.13.4
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [secret-scan, trufflehog-scan, code-scanning, dependency-audit]
    if: always()
    steps:
      - name: Check security status
        run: |
          echo "### Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Secret Scan: ${{ needs.secret-scan.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- TruffleHog Scan: ${{ needs.trufflehog-scan.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- CodeQL Analysis: ${{ needs.code-scanning.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Dependency Audit: ${{ needs.dependency-audit.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.secret-scan.result }}" != "success" ] || \
             [ "${{ needs.trufflehog-scan.result }}" != "success" ]; then
            echo "::error::Security scans failed! Review the logs above."
            exit 1
          fi
